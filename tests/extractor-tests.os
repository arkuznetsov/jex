#Использовать "../src/core"
#Использовать "../src/cmd"

Перем Лог;                       //    - логгер

// Процедура выполняется после запуска теста
//
Процедура ПередЗапускомТеста() Экспорт
	
	Лог = ПараметрыСистемы.Лог();

КонецПроцедуры // ПередЗапускомТеста()

// Процедура выполняется после запуска теста
//
Процедура ПослеЗапускаТеста() Экспорт

КонецПроцедуры // ПослеЗапускаТеста()

&Тест
Процедура ТестДолжен_ИзвлечьДанныеИзСтрокиJSON() Экспорт

	СтрокаJSON = "[{""Имя"":""Вася"",""Пол"":""Мужской"",""Возраст"":29},
	             |{""Имя"":""Люба"",""Пол"":""Женский"",""Возраст"":30}]";

	Результат = ИзвлечениеДанныхJSON.Выбрать(СтрокаJSON, "$..[?(@.Возраст >= 30)].Имя");

	ТестовоеЗначение = "Люба";

	Утверждения.ПроверитьРавенство(Результат, ТестовоеЗначение, "Ошибка выборки данных из JSON"); 

КонецПроцедуры // ТестДолжен_ИзвлечьДанныеИзСтрокиJSON()

&Тест
Процедура ТестДолжен_ИзвлечьДанныеИзФайлаJSON() Экспорт

	ПутьКФайлу = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "data.json");

	Результат = ИзвлечениеДанныхJSON.Выбрать(ПутьКФайлу, "$..[?(@.command == 'database create')].description");

	ТестовоеЗначение = "Создание БД";

	Утверждения.ПроверитьРавенство(Результат, ТестовоеЗначение, "Ошибка выборки данных из JSON"); 

КонецПроцедуры // ТестДолжен_ИзвлечьДанныеИзФайлаJSON()

&Тест
Процедура ТестДолжен_ИзвлечьДанныеИзПотокаJSON() Экспорт

	ПутьКФайлу = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "data.json");

	Поток = Новый ФайловыйПоток(ПутьКФайлу, РежимОткрытияФайла.Открыть);

	Результат = ИзвлечениеДанныхJSON.Выбрать(Поток, "$..[?(@.command == 'database create')].description");

	ТестовоеЗначение = "Создание БД";

	Утверждения.ПроверитьРавенство(Результат, ТестовоеЗначение, "Ошибка выборки данных из JSON"); 

КонецПроцедуры // ТестДолжен_ИзвлечьДанныеИзПотокаJSON()

&Тест
Процедура ТестДолжен_ИзвлечьСтроковоеЗначениеИзJSON() Экспорт

	СтрокаJSON = "[{""Имя"":""Вася"",""Пол"":""Мужской"",""Возраст"":29},
	             |{""Имя"":""Люба"",""Пол"":""Женский"",""Возраст"":30}]";

	Результат = ИзвлечениеДанныхJSON.Выбрать(СтрокаJSON, "$..[?(@.Возраст >= 30)].Имя");

	ТестовоеЗначение = "Люба";

	Утверждения.ПроверитьРавенство(Результат, ТестовоеЗначение, "Ошибка выборки данных из JSON"); 

КонецПроцедуры // ТестДолжен_ИзвлечьСтроковоеЗначениеИзJSON()

&Тест
Процедура ТестДолжен_ИзвлечьЦелоеЧислоИзJSON() Экспорт

	СтрокаJSON = "[{""Имя"":""Вася"",""Пол"":""Мужской"",""Возраст"":29.5},
	             |{""Имя"":""Люба"",""Пол"":""Женский"",""Возраст"":30}]";

	Результат = ИзвлечениеДанныхJSON.Выбрать(СтрокаJSON, "$..[?(@.Имя == 'Люба')].Возраст");

	ТестовоеЗначение = 30;

	Утверждения.ПроверитьРавенство(Результат, ТестовоеЗначение, "Ошибка выборки данных из JSON"); 

КонецПроцедуры // ТестДолжен_ИзвлечьЦелоеЧислоИзJSON()

&Тест
Процедура ТестДолжен_ИзвлечьПлавающееЧислоИзJSON() Экспорт

	СтрокаJSON = "[{""Имя"":""Вася"",""Пол"":""Мужской"",""Возраст"":29.5},
	             |{""Имя"":""Люба"",""Пол"":""Женский"",""Возраст"":30}]";

	Результат = ИзвлечениеДанныхJSON.Выбрать(СтрокаJSON, "$..[?(@.Имя == 'Вася')].Возраст");

	ТестовоеЗначение = 29.5;

	Утверждения.ПроверитьРавенство(Результат, ТестовоеЗначение, "Ошибка выборки данных из JSON"); 

КонецПроцедуры // ТестДолжен_ИзвлечьПлавающееЧислоИзJSON()

&Тест
Процедура ТестДолжен_ИзвлечьJSONИзJSON() Экспорт

	ПутьКФайлу = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "data.json");

	Результат = ИзвлечениеДанныхJSON.Выбрать(ПутьКФайлу, "$..description");
	Результат = СтрЗаменить(Результат, Символы.ВК, "");
	Результат = СтрЗаменить(Результат, Символы.ПС, "");
	Результат = СокрЛП(Результат);

	ТестовоеЗначение = "[""Создание БД"",""Восстановление из копии"",""Сжатие базы"",""Удаление базы""]";

	Утверждения.ПроверитьРавенство(Результат, ТестовоеЗначение, "Ошибка выборки данных из JSON"); 

КонецПроцедуры // ТестДолжен_ИзвлечьJSONИзJSON()

&Тест
Процедура ТестДолжен_ИзвлечьДанныеИПосчитатьКоличество() Экспорт

	СтрокаJSON = "[{""Имя"":""Вася"",""Пол"":""Мужской"",""Возраст"":29.5},
	             |{""Имя"":""Люба"",""Пол"":""Женский"",""Возраст"":30}]";

	Результат = ИзвлечениеДанныхJSON.Выбрать(СтрокаJSON, "$..Возраст.length()");

	ТестовоеЗначение = 2;

	Утверждения.ПроверитьРавенство(Результат, ТестовоеЗначение, "Ошибка выборки данных из JSON"); 

КонецПроцедуры // ТестДолжен_ИзвлечьДанныеИПосчитатьКоличество()

&Тест
Процедура ТестДолжен_ИзвлечьДанныеИПосчитатьСумму() Экспорт

	СтрокаJSON = "[{""Имя"":""Вася"",""Пол"":""Мужской"",""Возраст"":29.5},
	             |{""Имя"":""Люба"",""Пол"":""Женский"",""Возраст"":30}]";

	Результат = ИзвлечениеДанныхJSON.Выбрать(СтрокаJSON, "$..Возраст.sum()");

	ТестовоеЗначение = 59.5;

	Утверждения.ПроверитьРавенство(Результат, ТестовоеЗначение, "Ошибка выборки данных из JSON"); 

КонецПроцедуры // ТестДолжен_ИзвлечьДанныеИПосчитатьСумму()

&Тест
Процедура ТестДолжен_ИзвлечьДанныеИПосчитатьСреднее() Экспорт

	СтрокаJSON = "[{""Имя"":""Вася"",""Пол"":""Мужской"",""Возраст"":29.5},
	             |{""Имя"":""Люба"",""Пол"":""Женский"",""Возраст"":30}]";

	Результат = ИзвлечениеДанныхJSON.Выбрать(СтрокаJSON, "$..Возраст.avg()");

	ТестовоеЗначение = 29.75;

	Утверждения.ПроверитьРавенство(Результат, ТестовоеЗначение, "Ошибка выборки данных из JSON"); 

КонецПроцедуры // ТестДолжен_ИзвлечьДанныеИПосчитатьСреднее()

&Тест
Процедура ТестДолжен_ИзвлечьДанныеИПосчитатьМинимум() Экспорт

	СтрокаJSON = "[{""Имя"":""Вася"",""Пол"":""Мужской"",""Возраст"":29.5},
	             |{""Имя"":""Люба"",""Пол"":""Женский"",""Возраст"":30}]";

	Результат = ИзвлечениеДанныхJSON.Выбрать(СтрокаJSON, "$..Возраст.min()");

	ТестовоеЗначение = 29.5;

	Утверждения.ПроверитьРавенство(Результат, ТестовоеЗначение, "Ошибка выборки данных из JSON"); 

КонецПроцедуры // ТестДолжен_ИзвлечьДанныеИПосчитатьМинимум()

&Тест
Процедура ТестДолжен_ИзвлечьДанныеИПосчитатьМаксимум() Экспорт

	СтрокаJSON = "[{""Имя"":""Вася"",""Пол"":""Мужской"",""Возраст"":29.5},
	             |{""Имя"":""Люба"",""Пол"":""Женский"",""Возраст"":30}]";

	Результат = ИзвлечениеДанныхJSON.Выбрать(СтрокаJSON, "$..Возраст.max()");

	ТестовоеЗначение = 30;

	Утверждения.ПроверитьРавенство(Результат, ТестовоеЗначение, "Ошибка выборки данных из JSON"); 

КонецПроцедуры // ТестДолжен_ИзвлечьДанныеИПосчитатьМаксимум()

&Тест
Процедура ТестДолжен_ИзвлечьДанныеИВыбратьПервоеЗначение() Экспорт

	СтрокаJSON = "[{""Имя"":""Вася"",""Пол"":""Мужской"",""Возраст"":29.5},
	             |{""Имя"":""Люба"",""Пол"":""Женский"",""Возраст"":30}]";

	Результат = ИзвлечениеДанныхJSON.Выбрать(СтрокаJSON, "$[*].first()");
	Результат = СтрЗаменить(Результат, Символы.ВК, "");
	Результат = СтрЗаменить(Результат, Символы.ПС, "");
	Результат = СокрЛП(Результат);

	ТестовоеЗначение = "{""Имя"": ""Вася"",""Пол"": ""Мужской"",""Возраст"": 29.5}";

	Утверждения.ПроверитьРавенство(Результат, ТестовоеЗначение, "Ошибка выборки данных из JSON"); 

КонецПроцедуры // ТестДолжен_ИзвлечьДанныеИВыбратьПервоеЗначение()

&Тест
Процедура ТестДолжен_ИзвлечьДанныеИВыбратьПоследнееЗначение() Экспорт

	СтрокаJSON = "[{""Имя"":""Вася"",""Пол"":""Мужской"",""Возраст"":29.5},
	             |{""Имя"":""Люба"",""Пол"":""Женский"",""Возраст"":30}]";

	Результат = ИзвлечениеДанныхJSON.Выбрать(СтрокаJSON, "$[*].last()");
	Результат = СтрЗаменить(Результат, Символы.ВК, "");
	Результат = СтрЗаменить(Результат, Символы.ПС, "");
	Результат = СокрЛП(Результат);

	ТестовоеЗначение = "{""Имя"": ""Люба"",""Пол"": ""Женский"",""Возраст"": 30}";

	Утверждения.ПроверитьРавенство(Результат, ТестовоеЗначение, "Ошибка выборки данных из JSON"); 

КонецПроцедуры // ТестДолжен_ИзвлечьДанныеИВыбратьПоследнееЗначение()

&Тест
Процедура ТестДолжен_ИзвлечьДанныеИВыбратьПоляЗначения() Экспорт

	СтрокаJSON = "[{""Имя"":""Вася"",""Пол"":""Мужской"",""Возраст"":29.5},
	             |{""Имя"":""Люба"",""Пол"":""Женский"",""Возраст"":30}]";

	Результат = ИзвлечениеДанныхJSON.Выбрать(СтрокаJSON, "$..[?(@.Возраст >= 30)].keys()");
	Результат = СтрЗаменить(Результат, Символы.ВК, "");
	Результат = СтрЗаменить(Результат, Символы.ПС, "");
	Результат = СокрЛП(Результат);

	ТестовоеЗначение = "[""Имя"",""Пол"",""Возраст""]";

	Утверждения.ПроверитьРавенство(Результат, ТестовоеЗначение, "Ошибка выборки данных из JSON"); 

КонецПроцедуры // ТестДолжен_ИзвлечьДанныеИВыбратьПоляЗначения()
